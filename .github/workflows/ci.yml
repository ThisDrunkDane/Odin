name: CI
on: 
  release:    
    types: [published]
  push:
  pull_request:
    
jobs:
  build_linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Download LLVM
        run: sudo apt-get install llvm
      - name: build odin
        run: make release
      - name: Odin run
        run: ./odin run examples/demo/demo.odin
      - name: Odin check
        run: ./odin check examples/demo/demo.odin -vet
  build_macOS:
    runs-on: macOS-latest
    steps:
      - uses: actions/checkout@v1
      - name: Download LLVM and setup PATH
        run: |
          brew install llvm
          echo ::add-path::/usr/local/opt/llvm/bin
          echo ::set-env name=CPATH::`xcrun --show-sdk-path`/usr/include
      - name: build odin
        run: make release
      - name: Odin run
        run: ./odin run examples/demo/demo.odin
      - name: Odin check
        run: ./odin check examples/demo/demo.odin -vet
  build_windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v1
      - name: Download and unpack LLVM bins
        shell: powershell
        run: |
          cd bin
          $ProgressPreference = "SilentlyContinue";
          Invoke-WebRequest -Uri https://github.com/odin-lang/Odin/releases/download/llvm-windows/llvm-binaries.zip -OutFile llvm-binaries.zip
          7z x llvm-binaries.zip > $null
      - name: build Odin
        shell: cmd
        run: |
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat
          ./build.bat 1
      - name: Odin run
        shell: cmd
        run: |
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat
          odin run examples/demo/demo.odin
      - name: Odin check
        shell: cmd
        run: |
          call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat
          odin check examples/demo/demo.odin -vet
      - if: github.event_name == 'release'
        name: Copy artifacts
        run: |
          rm bin/llvm/windows/LLVM-C.lib
          mkdir dist
          cp odin.exe dist
          cp LLVM-C.dll dist
          cp -r shared dist
          cp -r core dist
          cp -r bin dist
          cp -r examples dist
      - if: github.event_name == 'release'
        name: Upload artifact
        uses: actions/upload-artifact@v1
        with:
          name: windows_artifacts
          path: dist
  add_release_artifacts:
    runs-on: [ubuntu-latest]
    needs: [build_windows, build_macOS, build_linux]
    if: github.event_name == 'release'
    steps:
       - name: Download Windows artifacts
         uses: actions/download-artifact@v1
         with:
           name: windows_artifacts
       - name: List files
         run: ls windows_artifacts

